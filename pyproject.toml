[project]
name = "mkdocs-ledger"
description = "A MkDocs Ledger theme based on Material for MkDocs"
authors = [
    {name = "Ledger", email = "hello@ledger.fr"},
]
readme = "README.md"
requires-python = ">=3.8"
keywords = ["mkdocs", "theme"]
dynamic = ["version"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]

dependencies = [
    "mkdocs-material>=9",
]
[project.optional-dependencies]
click = [
    "mkdocs-click>=0.8.0",
]
docstrings = [
    "mkdocstrings-python>=0.9.0",
]


[project.entry-points."mkdocs.themes"]
ledger = "mkdocs_ledger"


[project.urls]
Homepage = "https://github.com/LedgerHQ/mkdocs-ledger"
Documentation = "https://ledgerhq.github.io/mkdocs-ledger"
Repository = "https://github.com/LedgerHQ/mkdocs-ledger"
Issues = "https://github.com/LedgerHQ/mkdocs-ledger/issues"


[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.pdm]
plugins = [
    "sync-pre-commit-lock",
]


[tool.pdm.version]
source = "scm"
write_to = "mkdocs_ledger/VERSION"

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.1.2",
    "pytest-sugar>=0.9.5",
    "pytest-cov>=3.0.0",
]
lint = [
    "codespell>=2.2.6",
    "mypy>=1.7.0",
    "ruff>=0.3.0",
]
tox = [
    "tox",
    "tox-pdm>=0.5",
]
docs = [
    "mike>=2.0",
    "emotional",
]

[tool.pdm.scripts]
test.help = "Run the test suite"
test.cmd = "pytest"

"test:all".help = "Run the test suite against all supported versions"
"test:all".cmd = "tox"

lint.help = "Lint all tracked files using pre-commit"
lint.cmd = "pre-commit run --all-files"

format.help = "Format the code according to known rules"
format.composite = [
    "codespell --write-changes --interactive 2",
    # See: https://docs.astral.sh/ruff/formatter/#sorting-imports
    "ruff check --select I --fix-only --show-fixes mkdocs_ledger tests",
    "ruff format mkdocs_ledger tests"
]

typing.help = "Full typing linting (includes imported packages and uncommmited files)"
typing.cmd = "mypy mkdocs_ledger tests --warn-unused-ignores"

cover.help = "Run the test suite with coverage"
pre_cover = "coverage erase"
cover.composite = [
  """
  test
    --cov
    --cov-report=term
    --cov-report=html:reports/coverage
    --cov-report=xml:reports/coverage.xml
    --no-cov-on-fail
    --junitxml=reports/tests.xml
  """
]

doc.help = "Generate the documentation site"
doc.composite = [
    "doc:build",
]

"doc:build".help = "Build the documentation site"
"doc:build".cmd = "mkdocs build"

"doc:serve".help = "Generate the documentation site (live reload)."
"doc:serve".cmd = "mkdocs serve"

"doc:deploy".help = "Deploy a versioned documentation using mike"
"doc:deploy".cmd = "mike deploy"

changelog.help = "Update the changelog"
changelog.cmd = "cz changelog --incremental"

commit.help = "Commit using the commitizen helper"
commit.cmd = "cz commit"

bump.help = "Bump the release"
bump.cmd = "cz bump --yes --changelog --check-consistency"

update-all.help = "Update all dependencies (keep consistency, accept pdm update parameters)"
update-all.composite = [
  "pre-commit autoupdate",
  "{pdm} update {args}",
  "{pdm} format",
]


[tool.commitizen]
name = "emotional"
github = "LedgerHQ/mkdocs-ledger"
jira_url = "https://ledgerhq.atlassian.net"
jira_prefixes = [
  "ARCHI-",
  "CAL-",
  "INFRA-",
  "INFRAPRJ-",
  "IRITSM-",
  "PE-",
  "VG-",
  "VSD-",
]
order_by_scope = true
version_provider = "scm"
update_changelog_on_bump = true
changelog_merge_prerelease = true
# remove this for the first 1.x release
major_version_zero = true


[tool.codespell]
ignore-words=".codespellignore"


[tool.pytest.ini_options]
addopts = "-ra"
norecursedirs = ".git build dist"
testpaths = [
  "mkdocs_ledger/",
  "tests/",
]


[tool.coverage.run]
source_pkgs = ["mkdocs_ledger"]
branch = true
omit = [
  "tests/*",
]


[tool.ruff]
line-length = 100
respect-gitignore = true
lint.select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # McCabe # fake8-comprehension
    "C",
    # Pyupgrade
    "UP",
    # isort
    "I001"
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["mkdocs_ledger"]
known-third-party = ["pytest"]
lines-between-types = 1


[tool.mypy]
# https://mypy.readthedocs.io/en/stable/command_line.html#cmdoption-mypy-exclude
exclude = [
  "/docs/",
  "/build/",
  "/dist/",
  "/site/",
  "/__pypackages__/",
]
# https://mypy.readthedocs.io/en/stable/command_line.html#cmdoption-mypy-ignore-missing-imports
ignore_missing_imports = true
